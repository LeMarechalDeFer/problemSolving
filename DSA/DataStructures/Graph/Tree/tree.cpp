

// ### ğŸ”¹ Structures
// - ImplÃ©mentation d'un arbre binaire
// - Parcours : in-order, pre-order, post-order, level-order (BFS)

// ### ğŸ”¹ ProblÃ¨mes classiques
// - Hauteur, taille, somme des nÅ“uds
// - VÃ©rifier si un arbre est Ã©quilibrÃ©
// - Inverser un arbre
// - VÃ©rifier si deux arbres sont identiques
// - Lowest Common Ancestor (LCA)

// ### ğŸ”¹ Structures avancÃ©es (si temps)
// - Binary Search Tree (BST) + insertion, recherche, suppression
// - Arbre N-aire (chaque nÅ“ud a un nombre variable d'enfants)
// - Trie (pour les chaÃ®nes)

#include <iostream>




int main(){
    std::cout << "Hello world ! " << std::endl;
}